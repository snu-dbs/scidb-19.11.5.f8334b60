--setup
--start-query-logging

#data out-of-order test

create array teeth <val:int64 null> [x=0:*,2,0,y=0:*,2,0]

## no integrity checks

# notice that the input() behaves differently based on its third argument (-1=all instances, -2=coordinator)
# in case of -2, an _sg() is inserted right after input()

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt') " 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt')) " 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt'),1) " 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt'),teeth) " 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt'),teeth)) " 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt') " 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0, false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor
# make sure the binary & opaque are ok
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "save(teeth, '/tmp/${HPID}_teeth_di_ooo.binary',-2,'(int64 null)') " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '/tmp/${HPID}_teeth_di_ooo.binary',-2,'(int64 null)') " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '/tmp/${HPID}_teeth_di_ooo.binary',-2,'(int64 null)',0,true) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '/tmp/${HPID}_teeth_di_ooo.binary',-2,'(int64 null)',0,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor
--shell --command "rm -f /tmp/${HPID}/teeth_di_ooo.binary"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "save(teeth, '/tmp/${HPID}_teeth_di_ooo.opaque',-2,'OPAQUE') " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '/tmp/${HPID}_teeth_di_ooo.opaque',-2,'opaque') " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '/tmp/${HPID}_teeth_di_ooo.opaque',-2,'OPAQUE',0,true) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '/tmp/${HPID}_teeth_di_ooo.opaque',-2,'opaque',0,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor
--shell --command "rm -f /tmp/${HPID}/teeth_di_ooo.opaque"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,false)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,false)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,false),1, -1,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,false),teeth,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,false),teeth,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,false),teeth, false)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,false),teeth, false)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0, false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor

# should fail because duplicate chunks from multiple instances land in the same DB array
# OR they get merged by _sg() before being delivered to the DB array - UNDEFINED BEHAVIOR
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -naq "load(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0, false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_REDISTRIBUTE::SCIDB_LE_CANT_UPDATE_READ_ONLY_CHUNK\|successfully' > /dev/null"
# should NOT fail because there are no duplicate chunks
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0, false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(teeth)  -- Inserted by scan_doctor

# should fail because duplicate chunks from multiple instances land in the same DB array
# OR they get merged by _sg() before being delivered to the DB array - UNDEFINED BEHAVIOR
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -naq "load(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0, false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_REDISTRIBUTE::SCIDB_LE_CANT_UPDATE_READ_ONLY_CHUNK\|successfully' > /dev/null "

## integrity checks on input(), which should catch all the problems which can be identified locally

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

## integrity checks on _sg(input())

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,true),1, -1,false)" 2>&1 | grep 'SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,true),1, -1,false)" 2>&1 | grep 'SCIDB_LE_FILE_IMPORT_FAILED'"

# storing _sg should catch out of order chunks
--justrun "remove(TEETH)"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "store(_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,false),1, -1,true),TEETH)" 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
scan(TEETH)  -- Inserted by scan_doctor
--justrun "remove(TEETH)"

### input()'s isStrict overrides the one of _sg(), so _sg() is not enforcing anything; however, the persistent array should complain
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -naq "store(_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,false),1, -1,true),TEETH) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--justrun "remove(TEETH)"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,true),1, -1,true)" 2>&1 | grep 'SCIDB_LE_FILE_IMPORT_FAILED'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,true),1, -1,true)" 2>&1 | grep 'SCIDB_LE_FILE_IMPORT_FAILED'"

## integrity checks on redimension(input())

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,true),teeth,false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,true),teeth,false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

# the automatically inserted _sg() will just "merge", redimension() will not see anything wrong
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,false),teeth,true) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
### no SG in redimension, no data collision on a single instance -> no error
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,false),teeth,true)" 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,true),teeth,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,true),teeth,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,true),teeth, false))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,true),teeth, false))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,false),teeth, true)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,false),teeth, true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_REDISTRIBUTE::SCIDB_LE_DATA_COLLISION'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0,true),teeth, true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -1, 'text', 0,true),teeth, true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0, true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
scan(teeth)

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_ooo.txt', -2, 'text', 0, true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
scan(teeth)

--test
--cleanup
remove(teeth)
--justrun "remove(TEETH)"

--stop-query-logging
