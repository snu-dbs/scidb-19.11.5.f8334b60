--setup

# Buzz off, scan_doctor.

--start-query-logging

#data collision test

create array teeth <val:int64 null> [x=0:*,2,0,y=0:*,2,0]

## no integrity checks

# notice that the input() behaves differently based on its third argument (-1=all inatances, -2=coordinator)
# in case of -2, an _sg() is inserted right after input()

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt')"           2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt')) " 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt'),1) "    2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt'),teeth) "          2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt'),teeth)) " 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt')"                               2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

### client error in StreamArrayIterator because the EBM is not advanced correctly
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_EXECUTION::SCIDB_LE_NO_ASSOCIATED_BITMAP_CHUNK'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_EXECUTION::SCIDB_LE_NO_ASSOCIATED_BITMAP_CHUNK'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,false)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,false)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,false),1,-1,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

--echo "not strict so values at {0,2} {0,3} {1,2} {1,3} arbitrarily choose among two options"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,false),teeth,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,false),teeth,false) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,false),teeth, false)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,false),teeth, false)) " 2>&1 | grep -v 'Warnings during preparing' | grep -v 'not found on instance'"

### store() should not allow duplicates

--stop-query-logging
--shell --store --command " [ "$(iquery -c $IQUERY_HOST -p $IQUERY_PORT -otsv -aq "list('instances')" | wc -l)" = "1" ] && echo With one instance, the following tests are expected to FAIL, see SDB-3045. ; true "
--start-query-logging

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0, false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_STORAGE::SCIDB_LE_CHUNK_ALREADY_EXISTS' || true"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0, false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_STORAGE::SCIDB_LE_CHUNK_ALREADY_EXISTS' || true"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0, false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_STORAGE::SCIDB_LE_CHUNK_ALREADY_EXISTS' || true"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0, false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_STORAGE::SCIDB_LE_CHUNK_ALREADY_EXISTS' || true"

# Later tests expect teeth to be empty but single-instance loads succeeded.  SDB-3045.
remove(teeth)
create array teeth <val:int64 null> [x=0:*,2,0,y=0:*,2,0]
--stop-query-logging
--shell --store --command " [ "$(iquery -c $IQUERY_HOST -p $IQUERY_PORT -otsv -aq "list('instances')" | wc -l)" = "1" ] && echo End of tests failing due to single-instance configuration, SDB-3045.  Further failures are NOT expected. ; true"
--start-query-logging

## integrity checks on input(), which should catch all the problems which can be identified locally

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

## integrity checks on _sg(input())

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,true),1, -1,false)" 2>&1 | grep 'SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,true),1, -1,false)" 2>&1 | grep 'SCIDB_LE_FILE_IMPORT_FAILED'"

--justrun "remove(TEETH)"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "store(_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,false),1, -1,true),TEETH)" 2>&1 | grep 'SCIDB_LE_CHUNK_ALREADY_EXISTS'"
--error "remove(TEETH)"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "store(_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,false),1, -1,true),TEETH)" 2>&1 | grep 'SCIDB_LE_CHUNK_ALREADY_EXISTS'"
--error "remove(TEETH)"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,true),1, -1,true)" 2>&1 | grep 'SCIDB_LE_FILE_IMPORT_FAILED'"
--error "remove(TEETH)"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "_sg(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,true),1, -1,true)" 2>&1 | grep 'SCIDB_LE_FILE_IMPORT_FAILED'"
--error "remove(TEETH)"

## integrity checks on redimension(input())

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,true),teeth,false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,true),teeth,false)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

#      in prior releases this was succeeding, but should fail due to strict redimension
--echo in prior releases this was succeeding, but should fail due to strict redimension
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,false),teeth,true) " 2>&1 | grep 'Error id: scidb::SCIDB_SE_OPERATOR::SCIDB_LE_DATA_COLLISION'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,false),teeth,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_OPERATOR::SCIDB_LE_DATA_COLLISION'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,true),teeth,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,true),teeth,true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,true),teeth, false))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,true),teeth, false))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

#      in prior releases this was succeeding, but should fail due to strict redimension
--echo in prior releases this was succeeding, but should fail due to strict redimension
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,false),teeth, true)) " 2>&1 | grep 'Error id: scidb::SCIDB_SE_OPERATOR::SCIDB_LE_DATA_COLLISION'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,false),teeth, true))"  2>&1 | grep 'Error id: scidb::SCIDB_SE_OPERATOR::SCIDB_LE_DATA_COLLISION'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0,true),teeth, true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "consume(redimension(input(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -1, 'text', 0,true),teeth, true))" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0, true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
scan(teeth)

--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(teeth, '${TEST_DATA_DIR}/teeth_di_col.txt', -2, 'text', 0, true)" 2>&1 | grep 'Error id: scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED'"
scan(teeth)

--test
--cleanup
remove(teeth)
--justrun "remove(TEETH)"

--stop-query-logging
