--setup
--start-query-logging
# Ticket number : 1688
# Tests for the binary load-save on Arrays with UDT as point and rational
# Tests cover AQL syntax

load_library('point')
load_library('rational')

create array A <a:int32>[x=0:2,3,0]
create array B <b:point>[x=0:2,3,0]
create array C <c:rational>[x=0:2,3,0]
create array Z <a:int32,b:point,c:point> [x=0:2,3,0]
create array Y <a:int32,b:point,c:rational> [x=0:2,3,0]

store(build(A,x+1),A)
scan(A)  -- Inserted by scan_doctor
store(apply(apply(A,b,point2str(str2point('(1,1)'))) As N1,c,point2str(str2point('(3,2)'))) As N2,ZZ)
scan(ZZ)  -- Inserted by scan_doctor
store(apply(apply(A,b,point2str(str2point('(1,1)'))) As N1,c,str(rational(x+3,2))) As N2,YY)
scan(YY)  -- Inserted by scan_doctor


--test

--aql select * from _show_nodist(ZZ)
--aql select * from _show_nodist(YY)

--aql save ZZ into current instance 'zzz.txt' as 'text'
--aql load Z from current instance 'zzz.txt' as 'text'
scan(Z)  -- Inserted by scan_doctor
--aql save YY into current instance 'yyy.txt' as 'text'
--aql load Y from current instance 'yyy.txt' as 'text'
scan(Y)  -- Inserted by scan_doctor

--aql save ZZ into current instance 'mathio.bin' as '(int32,point,point)'
--aql load Z from  current instance 'mathio.bin' as '(int32,point,point)'
scan(Z)  -- Inserted by scan_doctor
--aql save YY into current instance 'trigno.bin' as '(int32,point,rational)'
--aql load Y from current instance 'trigno.bin' as '(int32,point,rational)'
scan(Y)  -- Inserted by scan_doctor

--aql save ZZ into current instance 'mat.dmp' as '(int32,string,string)'
--aql save YY into current instance 'tri.dmp' as '(int32,string,string)'
--aql load Z from  current instance 'mathio.bin' as '(int32,point,point)'
scan(Z)  -- Inserted by scan_doctor
--aql load Z from  current instance 'mat.dmp' as '(int32,string,string)'
scan(Z)  -- Inserted by scan_doctor

--error --code scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED --aql="load Y from  current instance 'mat.dmp' as '(int32,string,string)'"
--aql load Y from  current instance 'mat.dmp' as '(int32,string,string)' errors 100
scan(Y)  -- Inserted by scan_doctor
--aql load Y from current instance 'tri.dmp' as '(int32,string,string)'
scan(Y)  -- Inserted by scan_doctor
--aql load B from  current instance 'mat.dmp' as '(skip(4),string,skip(10))'
scan(B)  -- Inserted by scan_doctor
--aql load B from  current instance 'mat.dmp' as '(skip(4),skip(10),string)'
scan(B)  -- Inserted by scan_doctor

--error --code scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED --aql="load C from  current instance 'tri.dmp' as '(skip(4),string,skip(10))'"
--aql load C from  current instance 'tri.dmp' as '(skip(4),string,skip(10))' errors 100
scan(C)  -- Inserted by scan_doctor
--aql load C from  current instance 'tri.dmp' as '(skip(4),skip(10),string)'
scan(C)  -- Inserted by scan_doctor
--error --code scidb::SCIDB_SE_IMPORT_ERROR::SCIDB_LE_FILE_IMPORT_FAILED --aql="load C from  current instance 'tri.dmp' as '(skip(4),skip(10),rational)'"

--aql load B from  current instance 'mathio.bin' as '(skip(4),skip(16),point)'
scan(B)  -- Inserted by scan_doctor
--aql load C from current instance 'trigno.bin' as '(skip(4),skip(16),rational)'
scan(C)  -- Inserted by scan_doctor
--aql load B from current instance 'trigno.bin' as '(skip(4),point,skip(16))'
scan(B)  -- Inserted by scan_doctor

--cleanup
remove(A)
remove(B)
remove(C)
remove(Z)
remove(Y)
remove(ZZ)
remove(YY)

--stop-query-logging
