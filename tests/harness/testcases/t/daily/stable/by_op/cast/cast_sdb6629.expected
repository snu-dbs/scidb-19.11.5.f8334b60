SCIDB QUERY : <store(flatten(build(<v:int64>[i=0:3], i)), DF1)>
Query was executed successfully

SCIDB QUERY : <store(flatten(build(<w:int64>[j=0:2], j)), DF2)>
Query was executed successfully

SCIDB QUERY : <show('cross_join(DF1, DF2)', 'afl')>
{i} schema,distribution,etcomp
{0} 'DF1@1DF2@1<i:int64 NOT NULL,v:int64,j:int64 NOT NULL,w:int64> [$inst=0:*:0:1; $seq=0:*:0:1000000; $inst=0:*:0:1; $seq=0:*:0:1000000]',null,null

SCIDB QUERY : <cast(cross_join(DF1, DF2), (w, double_u))>
0	0	0	0
0	0	1	1
0	0	2	2
1	1	0	0
1	1	1	1
1	1	2	2
2	2	0	0
2	2	1	1
2	2	2	2
3	3	0	0
3	3	1	1
3	3	2	2

SCIDB QUERY : <cast(cross_join(DF1, DF2), ($_0, flim), ($_1, flam))>
0	0	0	0
0	0	1	1
0	0	2	2
1	1	0	0
1	1	1	1
1	1	2	2
2	2	0	0
2	2	1	1
2	2	2	2
3	3	0	0
3	3	1	1
3	3	2	2

SCIDB QUERY : <cast(cross_join(DF1, DF2), (w, $double_u))>
[An error expected at this place for the query "cast(cross_join(DF1, DF2), (w, $double_u))". And it failed with error code = scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_RESERVED_NAME. Expected error code = scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_RESERVED_NAME.]

SCIDB QUERY : <cast(sort(build(<v:int64>[i=0:9], 10-i)), (v, vee))>
{$n} vee
{0} 1
{1} 2
{2} 3
{3} 4
{4} 5
{5} 6
{6} 7
{7} 8
{8} 9
{9} 10

SCIDB QUERY : <cast(sort(build(<v:int64>[i=0:9], 10-i)), ($0, foo), ($n, N))>
{N} foo
{0} 1
{1} 2
{2} 3
{3} 4
{4} 5
{5} 6
{6} 7
{7} 8
{8} 9
{9} 10

SCIDB QUERY : <remove(DF1)>
Query was executed successfully

SCIDB QUERY : <remove(DF2)>
Query was executed successfully

