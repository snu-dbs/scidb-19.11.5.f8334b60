#2277: unify the error message when redim_store has an "overflow" in synthetic dim
--setup
--start-query-logging
create array Input<x:int64>[i=0:7,2,0]
create array Good<i:int64>[x=0:3,2,0, s=0:1,2,0]
create array Bad<i:int64>[x=0:3,2,0, s=0:1,1,0]
store(build(Input, i/2), Input)
scan(Input)  -- Inserted by scan_doctor

create array SYNTH_SRC <v:int64>[i=0:16,10,3, j=-8:8,10,5, k=-4:12,10,2, l=-16:0,10,1]
create array SYNTH_DST <v:int64>[i=0:16,10,0, l=-16:0,10,0, s=0:16*16*2, 33*33,0]
--igdata "store(build(SYNTH_SRC, i+j+k+l), SYNTH_SRC)"

--test
store(redimension(Input, Good), Good)
scan(Good)  -- Inserted by scan_doctor
--error --code=scidb::SCIDB_SE_OPERATOR::SCIDB_LE_OP_REDIMENSION_STORE_ERROR7 "store(redimension(Input, Bad), Bad)"

--igdata "store(redimension(SYNTH_SRC, SYNTH_DST), SYNTH_DST)"

aggregate(filter(apply(join(aggregate(SYNTH_SRC, sum(v), count(*)) as L, aggregate(SYNTH_DST, sum(v),count(*)) as R), diffC, L.count-R.count, diffV, L.v_sum-R.v_sum), diffC<>0 or diffV<>0), count(*))
aggregate(filter(apply(join(aggregate(SYNTH_SRC, sum(v), count(*),i,l) as L, aggregate(SYNTH_DST, sum(v),count(*),i,l) as R), diffC, L.count-R.count, diffV, L.v_sum-R.v_sum), diffC<>0 or diffV<>0), count(*))

--cleanup
remove(Input)
remove(Good)
remove(Bad)
remove(SYNTH_SRC)
remove(SYNTH_DST)
--stop-query-logging
