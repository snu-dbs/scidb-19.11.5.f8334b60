--setup
--start-query-logging
# Ticket number: 1950
# Testing INSERT operator on Unbounded arrays 1D/2D
# Test covers multi-attribute insert by using join/apply
# Test covers sparse and dense insert on unbounded arrays


create array A <val:double> [x=1:*,4,0]
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(A, '${TEST_DATA_DIR}/unbound_ins.txt')""
scan(A)  -- Inserted by scan_doctor

create array B <val:double> [x=1:20,4,0]
store(build(B,101.5*x+100),B)
scan(B)  -- Inserted by scan_doctor

create array AA <a:string> [x=0:*,4,0, y=0:*,2,0]
--shell --store-all --command "iquery -c $IQUERY_HOST -p $IQUERY_PORT -aq "load(AA, '${TEST_DATA_DIR}/unbound_string')""
scan(AA)  -- Inserted by scan_doctor

create array ZZ <a:string> [x=0:3,4,0, y=0:3,2,0]
create array BB <a:string, b:string> [x=0:*,4,0, y=0:*,2,0]
create array TT <a:string> [x=0:2,4,0,y=0:2,2,0]


--test
insert(B,A)
scan(A)  -- Inserted by scan_doctor
insert(scan(A@1,true),B)
scan(B)  -- Inserted by scan_doctor
insert(scan(A,true),B)
scan(B)  -- Inserted by scan_doctor
insert(B@1,B)
scan(B)  -- Inserted by scan_doctor
insert(B@2,A)
scan(A)  -- Inserted by scan_doctor

--error --code scidb::SCIDB_SE_SYNTAX::SCIDB_LE_CANT_ACCESS_ARRAY_VERSION "insert(B@1,B@2)"
insert(filter(build(ZZ, string(3+y)+'amigos!1-insert '), x=0 and y=0),AA)
scan(AA)  -- Inserted by scan_doctor

--igdata "store(filter(build(ZZ, string(3+y)+'amigos!2-insert '), x=0 and y=2),ZZ)"
insert(ZZ, AA)
scan(AA)  -- Inserted by scan_doctor

scan(ZZ)
insert(ZZ,ZZ)
scan(ZZ)  -- Inserted by scan_doctor
insert(join(ZZ,AA),BB)
scan(BB)  -- Inserted by scan_doctor
scan(BB)

--error --code scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_WRONG_ATTRIBUTE_TYPE "insert(apply(build(ZZ,x*y+10),b, x),BB)"
--error --code scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_ARRAYS_NOT_CONFORMANT "insert(build(ZZ,x*y+10),BB)"
insert(apply(build(ZZ,x*y+10),b,'SciDB'+a),BB)
scan(BB)  -- Inserted by scan_doctor

aggregate(versions(AA),count(*))
aggregate(versions(BB),count(*))
aggregate(versions(ZZ),count(*))
aggregate(versions(TT),count(*))


--cleanup
remove(A)
remove(B)
remove(AA)
remove(ZZ)
remove(BB)
remove(TT)
--stop-query-logging
