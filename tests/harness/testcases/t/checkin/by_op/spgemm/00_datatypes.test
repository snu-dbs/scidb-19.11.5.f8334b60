--setup
load_library('linear_algebra')

--start-query-logging

# these are unsupported, and will fail
create array SAint8 <a:int8 NOT NULL>[x=0:2,3,0, y=0:2,3,0]
create array SAint16 <a:int16 NOT NULL>[x=0:2,3,0, y=0:2,3,0]
create array SAint32 <a:int32 NOT NULL>[x=0:2,3,0, y=0:2,3,0]
create array SAint64 <a:int64 NOT NULL>[x=0:2,3,0, y=0:2,3,0]
create array SAuint8 <a:uint8 NOT NULL>[x=0:2,3,0, y=0:2,3,0]
create array SAuint16 <a:uint16 NOT NULL>[x=0:2,3,0, y=0:2,3,0]
create array SAuint32 <a:uint32 NOT NULL>[x=0:2,3,0, y=0:2,3,0]
create array SAuint64 <a:uint64 NOT NULL>[x=0:2,3,0, y=0:2,3,0]

# these are supported 
create array SAfloat <a:float NOT NULL>[x=0:2,3,0, y=0:2,3,0]
create array SAdouble <a:double NOT NULL>[x=0:2,3,0, y=0:2,3,0]

# but not this again
create array SAstring <a:string NOT NULL>[x=0:2,3,0, y=0:2,3,0]


store( filter(build(SAint8, x+9), true), SAint8 )
scan(SAint8)  -- Inserted by scan_doctor
store( filter(build(SAint16, x+y), true), SAint16 )
scan(SAint16)  -- Inserted by scan_doctor
store( filter(build(SAint32, x+y), true), SAint32 )
scan(SAint32)  -- Inserted by scan_doctor
store( filter(build(SAint64, x+y), true), SAint64 )
scan(SAint64)  -- Inserted by scan_doctor
store( filter(build(SAuint8, x+y), true), SAuint8 )
scan(SAuint8)  -- Inserted by scan_doctor
store( filter(build(SAuint16, x+y), true), SAuint16 )
scan(SAuint16)  -- Inserted by scan_doctor
store( filter(build(SAuint32, x+y), true), SAuint32 )
scan(SAuint32)  -- Inserted by scan_doctor
store( filter(build(SAuint64, x+y), true), SAuint64 )
scan(SAuint64)  -- Inserted by scan_doctor
store( filter(build(SAfloat, x+y), true), SAfloat )
scan(SAfloat)  -- Inserted by scan_doctor
store( filter(build(SAdouble, x+y), true), SAdouble )
scan(SAdouble)  -- Inserted by scan_doctor
store( filter(build(SAstring, string(x+y)), true), SAstring )
scan(SAstring)  -- Inserted by scan_doctor

--test
--error "spgemm(SAint8, SAint8)"
--error "spgemm(SAint16, SAint16)"
--error "spgemm(SAint32, SAint32)"
--error "spgemm(SAint64, SAint64)"
--error "spgemm(SAuint8, SAuint8)"
--error "spgemm(SAuint16, SAuint16)"
--error "spgemm(SAuint32, SAuint32)"
--error "spgemm(SAuint64, SAuint64)"
spgemm(SAfloat, SAfloat, right_replicate: true)
spgemm(SAfloat, SAfloat, right_replicate: false)

spgemm(SAdouble, SAdouble, right_replicate: true)
spgemm(SAdouble, SAdouble, right_replicate: false)
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_OP_MULTIPLY_ERROR9 "spgemm(SAstring, SAstring)"

--error --code=scidb::SCIDB_SE_SYNTAX::SCIDB_LE_UNRECOGNIZED_KEYWORD_PARAM "spgemm(SAdouble, SAdouble, right_hallucinate: false)"
--error --code=scidb::SCIDB_SE_INFER_SCHEMA::SCIDB_LE_INVALID_OPERATOR_ARGUMENT "spgemm(SAdouble, SAdouble, 'toil and trouble')"

--cleanup
remove(SAint8)
remove(SAint16)
remove(SAint32)
remove(SAint64)
remove(SAuint8)
remove(SAuint16)
remove(SAuint32)
remove(SAuint64)
remove(SAfloat)
remove(SAdouble)
remove(SAstring)

--stop-query-logging
