# SDB-6720: Show that adding an attribute with the smallest size in
# the array (which will therefore be the iterated-over attribute)
# won't alter the cell count.

--setup
create array FUN <a:int64, b:int32>[x=0:99:0:10]
--shell --command "rm -f /tmp/fun.tsv"
--shell --command " \
  for A in $(seq 100) \
  ;do \
     printf "$A\t$((A + 10))\n" >> /tmp/fun.tsv \
  ;done"
load(FUN, '/tmp/fun.tsv', format:'tsv')

--test

# Run an aggregate, show that we iterate using attrId == 1 (b:int32) because it is smallest.
aggregate(_trace(FUN, '/tmp/attr1.trace'), count(*))
--shell --store --command "grep getConstIteratorImpl /tmp/attr1.trace-0 | cut -f4"

# Add an even smaller attribute and try it again.  The new attribute
# will be "synthesized".  *Should* have the same count!
add_attributes(FUN, <c:int8>)
aggregate(_trace(FUN, '/tmp/attr2.trace'), count(*))
--shell --store --command "grep getConstIteratorImpl /tmp/attr2.trace-0 | cut -f4"

--cleanup
remove(FUN)
--shell --command "rm -f /tmp/attr1.trace* /tmp/attr2.trace* /tmp/fun.tsv"
